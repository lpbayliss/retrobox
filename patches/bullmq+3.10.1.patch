diff --git a/node_modules/bullmq/dist/esm/classes/redis-connection.js b/node_modules/bullmq/dist/esm/classes/redis-connection.js
index 1b13b77..e4ee1c0 100644
--- a/node_modules/bullmq/dist/esm/classes/redis-connection.js
+++ b/node_modules/bullmq/dist/esm/classes/redis-connection.js
@@ -21,13 +21,14 @@ export class RedisConnection extends EventEmitter {
         this.blocking = blocking;
         if (!isRedisInstance(opts)) {
             this.checkBlockingOptions(overrideMessage, opts);
-            this.opts = Object.assign({ port: 6379, host: '127.0.0.1', retryStrategy: function (times) {
+            this.opts = Object.assign({
+                port: 6379, host: '127.0.0.1', retryStrategy: function (times) {
                     return Math.max(Math.min(Math.exp(times), 20000), 1000);
-                } }, opts);
+                }
+            }, opts);
             if (this.blocking) {
                 this.opts.maxRetriesPerRequest = null;
             }
-            this.checkUpstashHost(this.opts.host);
         }
         else {
             this._client = opts;
@@ -39,11 +40,9 @@ export class RedisConnection extends EventEmitter {
             if (isRedisCluster(this._client)) {
                 this.opts = this._client.options.redisOptions;
                 const hosts = this._client.startupNodes.map((node) => typeof node == 'string' ? node : node.host);
-                this.checkUpstashHost(hosts);
             }
             else {
                 this.opts = this._client.options;
-                this.checkUpstashHost(this.opts.host);
             }
             this.checkBlockingOptions(deprecationMessage, this.opts);
         }
@@ -64,14 +63,6 @@ export class RedisConnection extends EventEmitter {
             console.error(msg);
         }
     }
-    checkUpstashHost(host) {
-        const includesUpstash = Array.isArray(host)
-            ? host.some(node => node.includes('upstash.io'))
-            : host === null || host === void 0 ? void 0 : host.includes('upstash.io');
-        if (includesUpstash) {
-            throw new Error(upstashMessage);
-        }
-    }
     /**
      * Waits for a redis client to be ready.
      * @param redis - client
